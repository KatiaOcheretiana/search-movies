{"version":3,"file":"static/js/361.e4e996b6.chunk.js","mappings":"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","sources":["api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '663f98b62f35cf0441bf8b451b47f044';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${apiKey}`\n  );\n  return response.data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getTrailer = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/videos?language=en-US&api_key=${apiKey}`\n  );\n\n  return data.results.filter(v => v.name === 'Official Trailer')[0];\n};\n","import styled from 'styled-components';\n\nexport const CommonInfoField = styled.div`\n  display: grid;\n  justify-items: center;\n  padding: 15px 15px;\n  gap: 20px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n\n  margin-top: 40px;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(4, 4, 4, 0.4), rgba(4, 4, 4, 0.4))\n        no-repeat center/cover,\n      url(${props => props.$backdropSrc}) no-repeat center/cover;\n    filter: blur(15px);\n    z-index: -1;\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 2fr;\n    padding: 50px 50px;\n  }\n`;\n\nexport const CommonInfoContent = styled.div`\n  display: grid;\n  gap: 14px;\n  align-content: start;\n  background: linear-gradient(rgba(90, 90, 90, 0.4), rgba(90, 90, 90, 0.6));\n  padding: 15px;\n  box-shadow: rgba(90, 90, 90, 0.35) 0px 54px 45px,\n    rgba(90, 90, 90, 0.32) 0px -12px 20px, rgba(90, 90, 90, 0.22) 0px 4px 6px,\n    rgba(90, 90, 90, 0.27) 0px 12px 13px, rgba(90, 90, 90, 0.29) 0px -3px 5px;\n`;\n","import { getYear, parse } from 'date-fns';\nimport { CommonInfoContent, CommonInfoField } from './MovieInfo.styled';\nimport defaultImg from '../../images/default-image.jpg';\n\nexport const MovieInfo = ({ data }) => {\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = data;\n\n  const score = Math.round(vote_average * 10);\n  const releaseDate = parse(release_date, 'yyyy-MM-dd', new Date());\n  const releaseYear = getYear(releaseDate);\n\n  const backdropSrc = `https://image.tmdb.org/t/p/w500/${backdrop_path}`;\n\n  return (\n    <CommonInfoField $backdropSrc={backdropSrc}>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultImg\n        }\n        style={{ objectFit: 'cover', width: '300px' }}\n        alt=\"poster\"\n      />\n      <CommonInfoContent>\n        <h2>\n          {title} ({releaseYear})\n        </h2>\n        <p>User Score: {score}% </p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres?.map(item => item.name).join(' ')}</p>\n      </CommonInfoContent>\n    </CommonInfoField>\n  );\n};\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AdditionalField = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 100%;\n`;\n\nexport const LinkList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 120px);\n  gap: 20px;\n  justify-content: start;\n  width: 100%;\n`;\n\nexport const AdditionalItem = styled.li`\n  margin-top: 15px;\n  text-decoration: none;\n  border-radius: 100px;\n  padding: 12px 18px 12px 12px;\n  background-color: rgba(90, 90, 90, 0.2);\n  width: 100px;\n  font-size: 12px;\n\n  &:hover {\n    background-color: rgba(90, 90, 90, 0.6);\n  }\n\n  &:focus {\n    background-color: rgba(90, 90, 90, 0.6);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 120px;\n    font-size: 16px;\n  }\n`;\n\nexport const LinkNav = styled(NavLink)`\n  color: white;\n  text-decoration: none;\n\n  display: grid;\n  grid-template-columns: 10px auto;\n  gap: 15px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: grid;\n  grid-template-columns: auto auto;\n  width: 140px;\n\n  text-decoration: none;\n  border-radius: 100px;\n  padding: 12px 18px 12px 12px;\n  background-color: rgba(90, 90, 90, 0.2);\n\n  &:hover {\n    background-color: rgba(90, 90, 90, 0.6);\n  }\n\n  &:focus {\n    background-color: rgba(90, 90, 90, 0.6);\n  }\n`;\n\nexport const LinkText = styled.b`\n  font-size: medium;\n  color: white;\n`;\n","import { getMoviesDetails } from 'api';\nimport { Loader } from 'components/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  AdditionalField,\n  AdditionalItem,\n  BackLink,\n  LinkList,\n  LinkNav,\n  LinkText,\n} from './MovieDetails.styled';\nimport { FcReading, FcPortraitMode, FcUpLeft, FcInfo } from 'react-icons/fc';\nimport { Container } from 'components/GlobalStyle';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  useEffect(() => {\n    const searchDetails = async id => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMoviesDetails(id);\n        setDetails(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {details && (\n        <div>\n          <BackLink to={backLinkRef.current.state?.from ?? '/'}>\n            <FcUpLeft style={{ width: 40, height: 20 }} />\n            <LinkText> Go back</LinkText>\n          </BackLink>\n          <MovieInfo data={details} />\n        </div>\n      )}\n      {error && <h2>Try to reload this page </h2>}\n\n      {!isLoading && (\n        <AdditionalField>\n          <p>\n            <FcInfo />\n            Additional information\n          </p>\n          <LinkList>\n            <AdditionalItem>\n              <LinkNav to=\"cast\">\n                <FcPortraitMode />\n                Cast\n              </LinkNav>\n            </AdditionalItem>\n            <AdditionalItem>\n              <LinkNav to=\"reviews\">\n                <FcReading />\n                Reviews\n              </LinkNav>\n            </AdditionalItem>\n            <AdditionalItem>\n              <LinkNav to=\"trailer\">\n                <FcReading />\n                Trailer\n              </LinkNav>\n            </AdditionalItem>\n          </LinkList>\n        </AdditionalField>\n      )}\n\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["axios","apiKey","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMoviesCredits","_ref4","_callee4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","getTrailer","_ref6","_callee6","_yield$axios$get","_context6","filter","v","name","_x5","CommonInfoField","styled","_templateObject","_taggedTemplateLiteral","props","$backdropSrc","CommonInfoContent","_templateObject2","MovieInfo","poster_path","backdrop_path","title","vote_average","overview","genres","release_date","score","Math","round","releaseDate","parse","Date","releaseYear","getYear","backdropSrc","_jsxs","children","_jsx","src","defaultImg","style","objectFit","width","alt","map","item","join","AdditionalField","LinkList","AdditionalItem","_templateObject3","LinkNav","NavLink","_templateObject4","BackLink","Link","_templateObject5","LinkText","_templateObject6","MovieDetails","_backLinkRef$current$","_backLinkRef$current$2","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useParams","location","useLocation","backLinkRef","useRef","useEffect","searchDetails","id","t0","finish","Container","Loader","to","current","state","from","FcUpLeft","height","FcInfo","FcPortraitMode","FcReading","Outlet"],"sourceRoot":""}