{"version":3,"file":"static/js/967.36a7ccde.chunk.js","mappings":"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","sources":["api.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '663f98b62f35cf0441bf8b451b47f044';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${apiKey}`\n  );\n  return response.data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getTrailer = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/videos?language=en-US&api_key=${apiKey}`\n  );\n\n  return data.results.filter(v => v.name === 'Official Trailer')[0];\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 40px;\n  justify-content: center;\n`;\n\nexport const LinkCard = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.333;\n  letter-spacing: -0.16px;\n  list-style: none;\n  text-decoration: none;\n\n  transition: all 0.3s ease-out;\n  text-decoration: none;\n\n  &:hover {\n    transform: translateY(-5px) scale(1.105) translateZ(0);\n    box-shadow: 0 24px 36px rgba(0, 0, 0, 0.11),\n      0 24px 46px var(--box-shadow-color);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  margin: 10px 0;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { LinkCard, List, ListItem, Title } from './MoviesList.styled';\nimport defaultImg from '../../images/default-image.jpg';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {data.map(({ id, title, poster_path }) => (\n          <ListItem key={id}>\n            <LinkCard to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                style={{\n                  objectFit: 'cover',\n                }}\n                alt=\"poster\"\n              />\n              <Title>{title}</Title>\n            </LinkCard>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchField = styled.div`\n  display: grid;\n  width: 100%;\n  align-items: center;\n  align-content: center;\n\n  margin-bottom: 50px;\n`;\n\nexport const SearchForm = styled.form`\n  display: grid;\n\n  gap: 10px;\n\n  max-width: 600px;\n  border-radius: 3px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 3fr 1fr;\n\n    gap: 20px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  gap: 5px;\n  color: white;\n\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-color: rgba(106, 90, 255, 0.7);\n  border-radius: 200px;\n  padding: 15px 20px;\n\n  align-items: center;\n  justify-content: center;\n\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n    background-color: rgba(10, 102, 202);\n  }\n`;\n\nexport const SearcInput = styled.input`\n  display: inline-block;\n  width: 100%;\n\n  color: white;\n  background-color: black;\n\n  font-size: 20px;\n  border: 2px solid rgba(3, 102, 214);\n  outline: none;\n  padding: 10px 15px;\n\n  border: 4px solid rgba(106, 90, 255, 0.7);\n  border-radius: 20px;\n\n  &::placeholder {\n    font-size: 16px;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  SearcInput,\n  SearchBtn,\n  SearchField,\n  SearchForm,\n} from './SearchBar.styled';\nimport { BiSearch } from 'react-icons/bi';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  return (\n    <SearchField>\n      <SearchForm\n        onSubmit={e => {\n          e.preventDefault();\n          onSubmit(query);\n        }}\n      >\n        <SearcInput\n          onChange={e => setQuery(e.target.value)}\n          name=\"itemToSearch\"\n          value={query}\n          required\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchBtn type=\"submit\">\n          <span>Search</span> <BiSearch />\n        </SearchBtn>\n      </SearchForm>\n    </SearchField>\n  );\n};\n","import { searchMovies } from 'api';\nimport { Loader } from 'components/Loader';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Container } from 'components/GlobalStyle';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [wasSurched, setWasSurched] = useState(false);\n\n  const [params, setParams] = useSearchParams();\n  const queryToSearch = params.get('search') ?? '';\n\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const movies = await searchMovies(queryToSearch);\n        setMovies(movies);\n        if (wasSurched) {\n          if (movies.length > 0) {\n            toast.success('Successfully found!');\n          } else {\n            toast.error('Nothing found.');\n          }\n        }\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesList();\n  }, [queryToSearch, wasSurched]);\n\n  const handleSearch = async query => {\n    setParams({ search: query ?? '' });\n    setWasSurched(true);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleSearch} />\n      {isLoading ? <Loader /> : <MoviesList data={movies} />}\n      {error && <h2>Try to reload this page </h2>}\n    </Container>\n  );\n}\n"],"names":["axios","apiKey","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMoviesCredits","_ref4","_callee4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","getTrailer","_ref6","_callee6","_yield$axios$get","_context6","filter","v","name","_x5","List","styled","_templateObject","_taggedTemplateLiteral","LinkCard","Link","_templateObject2","ListItem","_templateObject3","Title","_templateObject4","MoviesList","location","useLocation","_jsx","_Fragment","children","map","id","title","poster_path","_jsxs","to","state","from","src","defaultImg","style","objectFit","alt","SearchField","SearchForm","SearchBtn","SearcInput","Searchbar","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","e","preventDefault","onChange","target","value","required","type","autoComplete","autoFocus","placeholder","BiSearch","Movies","_params$get","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","wasSurched","setWasSurched","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","queryToSearch","get","useEffect","fetchMoviesList","_movies","length","toast","t0","finish","handleSearch","search","Container","Loader"],"sourceRoot":""}