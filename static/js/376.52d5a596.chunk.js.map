{"version":3,"file":"static/js/376.52d5a596.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '663f98b62f35cf0441bf8b451b47f044';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/movie/day?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const getMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?language=en-US&api_key=${apiKey}`\n  );\n  return response.data;\n};\n\nexport const getMoviesCredits = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const CastField = styled.div`\n  padding: 20px;\n  margin: 40px 70px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const Card = styled.li`\n  box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  width: 200px;\n  height: 360px;\n  padding: 10px;\n`;\n\nexport const Info = styled.p`\n  margin-top: 10px;\n  font-weight: 500;\n`;\n","import { getMoviesCredits } from 'api';\nimport { Loader } from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Card, CastField, CastList, Info } from './Cast.styled';\nimport defaultImg from '../../images/default-avatar.webp';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const searchCast = async id => {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const data = await getMoviesCredits(id);\n        setCast(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <CastField>\n      {isLoading && <Loader />}\n      {error && <h2>Try to reload this page </h2>}\n      {cast && cast.length === 0 && <p>We didn't find information</p>}\n\n      {cast && (\n        <CastList>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <Card key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                style={{ objectFit: 'cover', width: '180px', height: '270px' }}\n                alt=\"cast\"\n              />\n              <Info>{name}</Info>\n              <Info>{character}</Info>\n            </Card>\n          ))}\n        </CastList>\n      )}\n    </CastField>\n  );\n}\n"],"names":["axios","apiKey","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","getMoviesDetails","_ref3","_callee3","movieId","_context3","_x2","getMoviesCredits","_ref4","_callee4","_context4","cast","_x3","getMoviesReviews","_ref5","_callee5","_context5","_x4","CastField","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","Card","_templateObject3","Info","_templateObject4","Cast","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useParams","useEffect","searchCast","id","t0","finish","_jsxs","children","_jsx","Loader","length","map","name","character","profile_path","src","defaultImg","style","objectFit","width","height","alt"],"sourceRoot":""}